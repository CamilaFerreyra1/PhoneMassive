CREATE COMPUTE MODULE Backend_Output_Log_MsgJson
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		SET OutputRoot.Properties = InputRoot.Properties;
		SET OutputLocalEnvironment = InputLocalEnvironment;
				
		IF EXISTS(InputRoot.JSON.Data[]) OR EXISTS (InputRoot.HTTPResponseHeader[]) THEN
            IF EXISTS(InputRoot.JSON.Data[]) THEN
                SET OutputRoot.XMLNSC = InputRoot.JSON;
                SET Environment.Variables.JSON = InputRoot.JSON;
            ELSEIF EXISTS (InputRoot.HTTPResponseHeader[]) THEN
                SET OutputRoot.XMLNSC.Data = InputRoot.HTTPResponseHeader[1];
                SET Environment.Variables.JSON = OutputRoot.XMLNSC ;
            END IF;

		ELSE
			SET OutputRoot.XMLNSC 	= InputRoot.SOAP;
			SET OutputRoot.XMLNSC.ExceptionList		= InputExceptionList;
   
        END IF;

        RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;