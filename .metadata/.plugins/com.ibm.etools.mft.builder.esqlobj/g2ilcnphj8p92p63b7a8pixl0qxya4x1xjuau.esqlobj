CREATE COMPUTE MODULE PhoneProcessing_SavePerson
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE RefEnv REFERENCE TO Environment.Variables.XMLNSC.Msg.MessageHeader;
		DECLARE refInJson REFERENCE TO InputRoot.JSON.Data.foundPerson;
		
		IF refInJson.Item.observations = 'Persona no encontrada' THEN
			CALL SumValueItem(RefEnv.messageId, 'numPeopleNOTFound', cacheCount.Data[1]);
			
			DECLARE insertValuesProcessResult ROW;
			CREATE FIELD insertValuesProcessResult.values;
			
			SET insertValuesProcessResult.values.ProcessId		= RefEnv.ProcessId;
			SET insertValuesProcessResult.values.messageId		= RefEnv.batchId;
			SET insertValuesProcessResult.values.TributaryCode	= RefEnv.TributaryCodeNumber;
			SET insertValuesProcessResult.values.documentNum	= RefEnv.DocumentNumber;
			SET insertValuesProcessResult.values.registeredName	= RefEnv.FullName;
			SET insertValuesProcessResult.values.AreaCode		= RefEnv.AreaCode;
			SET insertValuesProcessResult.values.Phone			= RefEnv.Phone;
			SET insertValuesProcessResult.values.Error			= refInJson.Item.observations;
			SET insertValuesProcessResult.values.Timestamp		= TimestampToString(CAST(CURRENT_TIMESTAMP AS CHARACTER));
			
			CALL InsertIntoProcessResults(insertValuesProcessResult.values);
			COMMIT;
			
			RETURN FALSE;
		END IF;
		
		DECLARE foundInBup INTEGER 0;
		DECLARE itemResults REFERENCE TO refInJson.Item[1];
		
		WHILE LASTMOVE(itemResults) DO
			IF itemResults.person.personSource = 'BUP' THEN
				SET foundInBup = foundInBup + 1;
			END IF;
			
			MOVE itemResults NEXTSIBLING REPEAT NAME;
		END WHILE;
		
		IF foundInBup > 1 OR foundInBup < 1 THEN
			DECLARE insertValuesProcessResult ROW;
			CREATE FIELD insertValuesProcessResult.values;
			
			DECLARE errorMsg CHARACTER 'Se encuentra mÃ¡s de una persona con los datos ingresados';
			DECLARE elementToCount CHARACTER 'numPhoneNOTForged';
			IF foundInBup < 1 THEN
				SET errorMsg = 'La persona no se encuentra en BUP';
				SET elementToCount = 'numPeopleNOTFound';
			END IF;
			
			CALL SumValueItem(RefEnv.messageId, elementToCount, cacheCount.Data[1]);
			
			SET insertValuesProcessResult.values.ProcessId		= RefEnv.ProcessId;
			SET insertValuesProcessResult.values.messageId		= RefEnv.batchId;
			SET insertValuesProcessResult.values.TributaryCode	= RefEnv.TributaryCodeNumber;
			SET insertValuesProcessResult.values.documentNum	= RefEnv.DocumentNumber;
			SET insertValuesProcessResult.values.registeredName	= RefEnv.FullName;
			SET insertValuesProcessResult.values.AreaCode		= RefEnv.AreaCode;
			SET insertValuesProcessResult.values.Phone			= RefEnv.Phone;
			SET insertValuesProcessResult.values.Error			= errorMsg;
			SET insertValuesProcessResult.values.Timestamp		= TimestampToString(CAST(CURRENT_TIMESTAMP AS CHARACTER));
			
			CALL InsertIntoProcessResults(insertValuesProcessResult.values);
			COMMIT;
			
			RETURN FALSE;
		END IF;
	
		FOR P AS refInJson.Item[] DO
			IF P.person.personSource = 'BUP' THEN
				CALL SumValueItem (RefEnv.messageId, 'numPeopleFound',cacheCount.Data[1]);
				
				SET RefEnv.FullName				= P.person.registeredName;
				SET RefEnv.bupId 				= P.person.bupId;
				SET RefEnv.TributaryCode		= P.person.tributaryCode.taxIdentificationNumber;
				SET RefEnv.TributaryCodeType 	= P.person.tributaryCode.taxIdentificationTypeCode;
				SET RefEnv.DocumentNum  		= P.person.identificationNumber;
				SET RefEnv.DocumentType  		= P.person.document.identificationTypeCode;
				 	
			    PROPAGATE TO TERMINAL 0;
			END IF;
		END FOR;
	
	RETURN FALSE;
		
END;
  END MODULE;