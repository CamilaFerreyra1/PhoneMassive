CREATE COMPUTE MODULE InitialSubflow_MsjJsonnnn
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		SET OutputRoot.Properties = InputRoot.Properties;
		SET OutputLocalEnvironment = InputLocalEnvironment;

		IF (EXISTS(InputRoot.JSON.Data[]) OR EXISTS(InputLocalEnvironment.HTTP.Input.QueryString[])) AND NOT EXISTS (InputRoot.SOAP[]) THEN --se modifica la linea para que admita querystring
			SET Environment.Variables.JSON.Header = InputRoot.HTTPInputHeader;
			IF EXISTS(InputRoot.JSON.Data[]) THEN
				SET Environment.Variables.JSON.Body = InputRoot.JSON.Data;
			ELSE
				SET Environment.Variables.JSON.Body = InputLocalEnvironment.HTTP.Input.QueryString;
			END IF;
			PROPAGATE TO TERMINAL 2;
		ELSE
			PROPAGATE TO TERMINAL 1;
		END IF;
		RETURN FALSE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;