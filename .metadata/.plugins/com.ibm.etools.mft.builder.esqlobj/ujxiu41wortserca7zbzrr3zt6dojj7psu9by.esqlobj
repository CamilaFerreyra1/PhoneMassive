CREATE COMPUTE MODULE LogHandler_Output_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET Environment.LogMsg.TRANSACTION_ID = Environment.TransactionId;
		SET Environment.LogMsg.SERVICE_NAME = Environment.Service.Name;
		SET Environment.LogMsg.OPERATION_NAME = Environment.Service.Operation.Name;
		SET Environment.LogMsg.USER = Environment.User; 
		
		SET Environment.LogMsg.TIMESTAMP = CURRENT_TIMESTAMP;
		SET Environment.LogMsg.APPOWNER = BrokerName;
		
		SET Environment.LogMsg.BACKEND_PROVIDER = Environment.BackendProvider;
		SET Environment.LogMsg.IP = Environment.Ip;
		SET Environment.LogMsg.ENDPOINT_NAME = Environment.EndpointName;
		SET Environment.LogMsg.DIRECTION = Environment.Direction;		
		
		SET Environment.LogMsg.TRANSACTION_STATE = 'Response_OK';
		SET Environment.LogMsg.TIMESTAMP = CURRENT_TIMESTAMP;		
		IF (EXISTS(InputRoot.SOAP.Body[]))THEN
			SET Environment.LogMsg.MSG = InputRoot.SOAP.Body;	
		ELSE 
			SET Environment.LogMsg.MSG = InputRoot.XMLNSC;
		END IF;
		SET Environment.LogMsg.BUSINESS_ENTITY_DEF				= Environment.Variables.Bussiness_DEF;
		SET Environment.LogMsg.BUSINESS_ENTITY_ID	 			= Environment.Variables.Bussiness_ID;
		SET Environment.LogMsg.ORCHESTRATION_ID	 				= Environment.Variables.Orchestration_ID;
		
			
		SET OutputRoot.XMLNSC.LogMsg = Environment.LogMsg;
			
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;