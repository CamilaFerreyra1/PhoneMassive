/*EATE FUNCTION Main() RETURNS BOOLE*/
	BEGIN
		 
		 SET OutputLocalEnvironment = InputLocalEnvironment;
		 CALL CopyMessageHeaders();
		 CALL CopyEntireMessage();
		IF EXISTS (InputRoot.XMLNSC.*[>].MessageHeader[]) THEN 
			DECLARE MessageHeader REFERENCE TO OutputRoot.XMLNSC.*[<].MessageHeader; 
			SET MessageHeader.UUID 								= UUIDASCHAR;
			SET	MessageHeader.Bussiness_DEF 					= Environment.Variables.Bussiness_DEF;
			SET	MessageHeader.Bussiness_ID 						= Environment.Variables.Bussiness_ID;
			SET MessageHeader.PROCESS_DEF 						= COALESCE(Environment.Variables.PROCESS_DEF,Environment.Variables.PROCESSDEFINITIONID);
			SET MessageHeader.PROCESS_INSTANCE_ID	 			= COALESCE(Environment.Variables.PROCESS_INSTANCE_ID,Environment.Variables.PROCESSINSTANCEID);
			SET MessageHeader.ACTIVITY_DEF	 					= COALESCE(Environment.Variables.ACTIVITY_DEF,Environment.Variables.ACTIVITYDEFINITIONID);
			SET MessageHeader.messageId							= Environment.TransactionId;
			
		ELSE 
			DECLARE MessageHeader REFERENCE TO OutputRoot.XMLNSC.*[<].MessageHeader;
			
			CREATE FIRSTCHILD OF OutputRoot.XMLNSC.*[<] AS MessageHeader NAME 'MessageHeader';
			
			SET MessageHeader.UUID 								= UUIDASCHAR;
			SET	MessageHeader.Bussiness_DEF 					= Environment.Variables.Bussiness_DEF;
			SET	MessageHeader.Bussiness_ID 						= Environment.Variables.Bussiness_ID;
			SET MessageHeader.PROCESS_DEF 						= COALESCE(Environment.Variables.PROCESS_DEF,Environment.Variables.PROCESSDEFINITIONID);
			SET MessageHeader.PROCESS_INSTANCE_ID	 			= COALESCE(Environment.Variables.PROCESS_INSTANCE_ID,Environment.Variables.PROCESSINSTANCEID);
			SET MessageHeader.ACTIVITY_DEF	 					= COALESCE(Environment.Variables.ACTIVITY_DEF,Environment.Variables.ACTIVITYDEFINITIONID);
			SET MessageHeader.messageId							= Environment.TransactionId;
		
		END IF; 
		
		
		
		
		--CREATE FIRSTCHILD OF OutputRoot.XMLNSC.*[<].MessageHeader NAME 'UUID' VALUE Environment.TransactionId;
		 
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
